[project]
name = "project_KuberAi"
version = "0.1.0"
description = "KuberAI - A multi-component AI project with MCP server and client"
authors = [
    {name = "Shreyas", email = "shreyasbhat17@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}

# Common dependencies across all components
dependencies = [
    "kubernetes>=33.1.0",
    "pydantic>=2.0.0",
    "requests>=2.32.4",
    "typing-extensions>=4.0.0",
    "mcp>=1.0.0",
    "langroid>=0.56.10",
]

# Optional dependencies for development
[dependency-groups]
dev = [
    "black>=25.1.0",
    "pre-commit>=4.2.0",
    "ruff>=0.12.1",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
]

# Hatchling Config
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "mcp_client/src",
    "mcp_server/src",
]

# Tool configurations
[tool.black]
line-length = 120
target-version = ['py312']

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "D"]
ignore = ["E501"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

# Workspace configuration for managing multiple components
[tool.uv.workspace]
members = [
    "mcp_server",
    "mcp_client",
]
