[project]
name = "project-kuberai"
version = "0.1.0"
description = "KuberAI - A multi-component AI project with MCP server and client"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}

# Common dependencies across all components
dependencies = [
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

# Optional dependencies for development
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "ruff>=0.4.0",
    "pydocstyle>=6.3.0",
    "bandit>=1.7.5",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Tool configurations
[tool.black]
line-length = 120
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
strict = true
ignore_missing_imports = true


[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "D"]
ignore = ["E501"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

# Workspace configuration for managing multiple components
[tool.uv.workspace]
members = [
    "mcp_server",
    "mcp_client",
]
